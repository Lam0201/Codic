//Mảng dữ liệu thẻ html
let elementArr = [
  {
    id: "comment",
    name: "<!--(comment)-->",
    meaning: "Bình luận",
    example: "<!--This can be viewed in the HTML part of a document-->",
    browser: '',
    ahihi: "hidden",
  },
  {
    id: "a-tag",
    name: "<a>",
    meaning: "Anchor - Mỏ neo - Dẫn đường link",
    example: '<a href="/index.html"> Visit Our Site</a>',
    browser: '<a href="/index.html"> Visit Our Site</a>',
  },
  {
    id: "b-tag",
    name: "<b>",
    meaning: "Bold - In đậm",
    example: "<b>Example</b>",
    browser: '<b>Example</b>',
  },
  {
    id: "big-tag",
    name: "<big>",
    meaning: "Big (text) - Cỡ chữ to",
    example: "<big>Example</big>",
    browser: '<big>Example</big>',
  },
  {
    id: "body-tag",
    name: "<body>",
    meaning: "Body of HTML document - Thân bài",
    example: "<body>The content of your HTML page</body>",
    browser: '',
  },
  {
    id: "br-tag",
    name: "<br>",
    meaning: "Line break - Xuống dòng",
    example: "The contents of your page<br>The contents of your page",
    browser: '',
  },
  {
    id: "center-tag",
    name: "<center>",
    meaning: "Center - Căn giữa",
    example: "<center>This will center your contents</center>",
    browser: '',
  },
  {
    id: "dd-tag",
    name: "<dd>",
    meaning: "Definition description - Định nghĩa",
    example: "<dd>Definition of the term</dd>",
    browser: '',
  },
  {
    id: "dl-tag",
    name: "<dl>",
    meaning: "Definition list - Danh sách định nghĩa",
    example: "<dl>\n<dt>Definition Term</dt>\n<dd>Definition of the term</dd>\n</dl>",
    browser: '',
  },
  {
    id: "em-tag",
    name: "<em>",
    meaning: "Emphasis - In đậm và nhấn mạnh",
    example: "This is an <em>Example</em> of using the emphasis tag",
    browser: '',
  },
  {
    id: "font-tag",
    name: "<font>",
    meaning: "Font - Định dạng",
    example: '<font face="Times New Roman">Example</font>',
    browser: '',
  },
  {
    id: "form-tag",
    name: "<form>",
    meaning: "Form - Biểu mẫu",
    example: '<form action="/action_page.php"> \n<label for ="fname">First name:</label><br> \n<input type="text" id="fname" name="fname" value="John"><br> \n<label for="lname">Last name:</label><br> \n<input type="text" id="lname" name="lname" value="Doe"><br><br> \n<input type="submit" value="Submit"> \n</form>',
    browser: '',
  },
  {
    id: "heading-tag",
    name: "<h1> => <h6>",
    meaning: "Heading - Đầu mục",
    example: "<h1>Heading 1 Example</h1>\n<h2>Heading 2 Example</h2>\n<h3>Heading 3 Example</h3>\n<h4>Heading 4 Example</h4>\n<h5>Heading 5 Example</h5>\n<h6>Heading 6 Example</h6>",
    browser: '',
  },
  {
    id: "head-tag",
    name: "<head>",
    meaning: "Heading of HTML document - Phần mở đầu của HTML",
    example: "<head>Contains elements describing the document</head>",
    browser: '',
  },
  {
    id: "horizontal-rule",
    name: "<hr/>",
    meaning: "Horizontal rule - Kẻ ngang từ điểm bắt đầu đến điểm kết thúc",
    example: "<hr/>",
    browser: '',
  },
  {
    id: "hypertext-markup-language",
    name: "<html>",
    meaning: "Hypertext markup language - Ngôn ngữ đánh dấu siêu văn bản",
    example: "<html>\n<head>\n<meta>\n<title>Title of your web page</title>\n</head>\n<body>HTML web page contents\n</body>\n</html>",
    browser: '',
  },
  {
    id: "italic",
    name: "<i>",
    meaning: "Italic - In nghiêng",
    example: "<i>Example</i>",
    browser: '',
  },
  {
    id: "image",
    name: "<img>",
    meaning: "Image - Chèn ảnh",
    example: '<img src="Earth.gif" width="41" height="41" border="0" alt="text describing the image" />',
    browser: '',
  },
  {
    id: "input",
    name: "<input>",
    meaning: "Input field - ô nhập thông tin",
    example: '<form method=post action="/cgibin/example.cgi">\n<input type="text" size="10"\nmaxlength="30">\n<input type="Submit" value="Submit">\n</form>',
    browser: '',
  },
  {
    id: "list-item",
    name: "<li>",
    meaning: "List item - Danh sách liệt kê",
    example: '<menu>\n<li type="disc">List item 1</li>\n<li type="circle">List item 2</li>\n<li type="square">List item 3</li>\n</MENU>',
    browser: '',
  },
  {
    id: "link",
    name: "<link>",
    meaning: "Link - đường dẫn",
    example: '<head>\n<link rel="stylesheet" type="text/css"\nhref="style.css" />\n</head>',
    browser: '',
    ahihi: "hidden",
  },
  {
    id: "menu",
    name: "<menu>",
    meaning: "menu - Menu - Bảng kê",
    example: '<menu>\n<li type="disc">List item 1</li>\n<li type="circle">List item 2</li>\n<li type="square">List item 3</li>\n</menu>',
    browser: '',
  },
  {
    id: "meta",
    name: "<meta>",
    meaning: "Meta - Thông tin về dữ liệu",
    example: '<meta name="Description" content="Description of your site">\n<meta name="keywords" content="keywords describing your site">',
    browser: '',
    ahihi: "hidden",
  },
  {
    id: "ordered-list",
    name: "<ol>",
    meaning: "Ordered list - Danh sách liệt kê theo thứ tự",
    example: '<ol>\n<li>List item 1</li>\n<li>List item 2</li>\n<li>List item 3</li>\n<li>List item 4</li>\n</ol>',
    browser: '',
  },
  {
    id: "option",
    name: "<option>",
    meaning: "Listbox option - Hộp tuỳ chọn",
    example: '<form method=post action="/cgi- bin/example.cgi">\n<center>\nSelect an option:\n<select>\n<option>option 1</option>\n<option selected>option 2</option>\n<option>option 3</option>\n<option>option 4</option>\n<option>option 5</option>\n<option>option 6</option>\n</select><br>\n</center>\n</form>',
    browser: '',
  },
  {
    id: "paragraph",
    name: "<p>",
    meaning: "Paragraph - Đoạn văn",
    example: 'This is an example displaying the use of the paragraph tag. <p> This will create a line break and a space between lines.',
    browser: '',
  },
  {
    id: "strong",
    name: "<strong>",
    meaning: "Strong emphasis - In đậm và nhấn mạnh",
    example: '<strong>Example</strong>',
    browser: '',
  },
  {
    id: "table",
    name: "<table>",
    meaning: "Table - Bảng",
    example: '<table border="4" cellpadding="2" cellspacing="2" width="100%">\n<tr>\n<td>Column 1</td>\n<td>Column 2</td>\n</tr>\n</table>',
    browser: '',
  },
  {
    id: "table-data",
    name: "<td>",
    meaning: "Table data - Thông tin từng ô trong bảng",
    example: '<table border="2" cellpadding="2" cellspacing="2" width="100%">\n<tr>\n<td>Column 1</td>\n<td>Column 2</td>\n</tr>\n</table>',
    browser: '',
  },
  {
    id: "table-header",
    name: "<th>",
    meaning: "Table header - Đầu mục của bảng",
    example: '<div align="center">\n<table>\n<tr>\n<th>Column 1</th>\n<th>Column 2</th>\n</tr>\n<tr>\n<td>Row 2</td>\n<td>Row 2</td>\n</tr>\n<tr>\n<td>Row 3</td>\n<td>Row 3</td>',
    browser: '',
  },
  {
    id: "title",
    name: "<title>",
    meaning: "Document title - Tiêu đề",
    example: '<title>Title of your HTML page</title>',
    browser: '',
    ahihi: "hidden",
  },
  {
    id: "table-row",
    name: "<tr>",
    meaning: "Table row - Hàng của bảng",
    example: '<table border="2" cellpadding="2" cellspacing="2" width="100%">\n<tr>\n<td>Column 1</td>\n<td>Column 2</td>\n</tr>\n</table>',
    browser: '',
  },
  {
    id: "underline",
    name: "<u>",
    meaning: "Underline - gạch chân",
    example: '<u>Example</u>',
    browser: '',
  },
  {
    id: "unordered-list",
    name: "<ul>",
    meaning: "Unordered list - Danh sách không theo thứ tự",
    example: 'Example 1:<br>\n<br>\n<ul>\n<li>List item 1</li>\n<li>List item 2</li>\n<li>List item 3</li>\n</ul>',
    browser: '',
  },
]
// xuất khẩu lao động object này
export {elementArr};

// mảng dữ liệu thẻ css
let cssArr = [
  {
    name: "align-items",
    meaning: "Căn chỉnh thẻ con",
    definition: "Căn chỉnh các thẻ con trong flexbox",
    example: "div {display: flex;align-items: center;}"
  },
  {
    name: "align-self",
    meaning: "Căn chỉnh thẻ con cụ thể",
    definition: "Căn chỉnh các thẻ con được chọn trong flexbox",
    example: "#myBlueDiv {\nalign-self: center;\n}"
  },
  {
    name: "background-color",
    meaning: "màu nền",
    definition: "Định dạng màu nền của các thành phần",
    example: "body {background-color: coral;}"
  },
  {
    name: "background-image",
    meaning: "ảnh nền",
    definition: "Định dạng 1 hay nhiều ảnh nền cho các thành phần",
    example: "body {background-image: linear-gradient(45deg, red, green);}",
  },
  {
    name: "border",
    meaning: "viền",
    definition: "A shorthand property for border-width, border-style and border-color",
    example: "h1 {border: 5px solid red;}",
  },
  {
    name: "box-sizing",
    meaning: "định dạng kích cỡ hộp",
    definition: "Định dạng kích cỡ hộp: có bao gồm phần đệm (padding) và phần viền (border) hay không",
    example: "#example1 {box-sizing: border-box;}",
  },
  {
    name: "color",
    meaning: "màu chữ",
    definition: "Định dạng màu của chữ",
    example: "body {color: red;}",
  },
  {
    name: "column-width",
    meaning: "chiều dài cột",
    definition: "Định dạng chiều dài của cột",
    example: "div {column-width: 100px;}",
  },
  {
    name: "display",
    meaning: "hiển thị",
    definition: "Cụ thể hóa cách 1 thành phần xuất hiện",
    example: "p.ex2 {display: inline;}",
  },
  {
    name: "flex-direction",
    meaning: "hướng các thành phần con trong flex",
    definition: "Cụ thể hóa hướng sắp xếp của các thành phần trong flex",
    example: "div {\ndisplay: flex;\nflex-direction: row-reverse;}",
  },
  {
    name: "flex-wrap",
    meaning: "xuống dòng",
    definition: "Căn chỉnh xuống dòng của các thành phần trong flex",
    example: "div {\ndisplay: flex;  \nflex-wrap: wrap;}",
  },
  {
    name: "font-family",
    meaning: "phông chữ",
    definition: "Định dạng loại phông chữ",
    example: "div {\ndisplay: flex;  \nflex-wrap: wrap;\n}",
  },
  {
    name: "font-size",
    meaning: "cỡ chữ",
    definition: "Định dạng cỡ chữ",
    example: "div {font-size: 15px;}",
  },
  {
    name: "font-weight",
    meaning: "độ dày chữ",
    definition: "Định dạng độ dày chữ",
    example: "div {\nfont-weight: bold;\n}",
  },
  {
    name: "grid",
    meaning: "lưới",
    definition: "Tạo định dạng bố cục lưới cho các thành phần con",
    example: ".grid-container {\ndisplay: grid;\ngrid: 150px / auto auto auto;}",
  },
  {
    name: "grid-template-columns",
    meaning: "cột trong grid",
    definition: "Định dạng kích thước và số lượng của cột trong bố cục lưới",
    example: ".grid-container {\ndisplay: grid;\ngrid-template-columns: auto auto auto auto;}",
  },
  {
    name: "grid-template-rows",
    meaning: "hàng trong grid",
    definition: "Định dạng kích thước và số lượng của hàng trong bố cục lưới",
    example: ".grid-container {\ndisplay: grid;\ngrid-template-rows: 100px 300px;}",
  },
  {
    name: "height",
    meaning: "chiều cao",
    definition: "Thiết lập chiều cao cho các thành phần",
    example: "div.a {\nheight: auto;\nborder: 1px solid black;}",
  },
  {
    name: "justify-content",
    meaning: "Căn chỉnh theo trục chính",
    definition: "Căn chỉnh khoảng cách giữa các thành phần theo trục chính",
    example: "div {\ndisplay: flex;\njustify-content: center;}",
  },
  {
    name: "margin",
    meaning: "khoảng trống ngoài viền",
    definition: "Định dạng khoảng trống ngoài viền từ 4 phía",
    example: "p {margin: 35px;}",
  },
  {
    name: "max-width",
    meaning: "chiều rộng tối đa",
    definition: "Thiết lập độ dài tối đa cho các thành phần",
    example: "p.ex1 {max-width: 150px;}",
  },
  {
    name: "min-width",
    meaning: "chiều rộng tối thiểu",
    definition: "Thiết lập độ dài tối thiểu cho các thành phần",
    example: "p.ex1 {max-width: 500px;}",
  },
  {
    name: "max-height",
    meaning: "chiều cao tối đa",
    definition: "Thiết lập chiều dài tối đa cho các thành phần",
    example: "p.ex1 {\nmax-height: 50px;\n}",
  },
  {
    name: "min-height",
    meaning: "chiều cao tối thiểu",
    definition: "Thiết lập chiều dài tối thiểu cho các thành phần",
    example: "p.ex1 {min-height: 100px;}",
  },
  {
    name: "order",
    meaning: "thứ tự",
    definition: "Căn chỉnh vị trí một thẻ con, so với những thẻ còn lại",
    example: "div#myRedDIV {order: 2;}",
  },
  {
    name: "overflow",
    meaning: "tràn viền",
    definition: "Cụ thể hóa cách xử lý khi nội dung tràn qua viền hộp",
    example: "div.ex1 {\noverflow: scroll;\n}",
  },
  {
    name: "overflow-x",
    meaning: "tràn theo trục x",
    definition: "Cụ thể hóa cách xử lý khi nội dung tràn viền hôp theo trục dọc",
    example: "div.ex1 {\noverflow-x: hidden;\n}",
  },
  {
    name: "overflow-y",
    meaning: "tràn theo trục y",
    definition: "Cụ thể hóa cách xử lý khi nội dung tràn viền hôp theo trục ngang",
    example: "div.ex1 {\noverflow-x: hidden;\n}",
  },
  {
    name: "padding",
    meaning: "đệm",
    definition: "Thiết lập khoảng cách đệm từ thành phần con đến thành phần cha",
    example: "p {padding: 35px;}",
  },
  {
    name: "position",
    meaning: "vị trí",
    definition: "Thể hiện phương thức định vị của các thành phần (static, relative, absolute or fixed)",
    example: "h2 {\nposition: absolute;\nleft: 100px;\ntop: 150px;\n}",
  },
  {
    name: "text-align",
    meaning: "căn chỉnh văn bản",
    definition: "căn chỉnh theo trục phụ của văn bản",
    example: "h2 {\nposition: absolute;\nleft: 100px;\ntop: 150px;}",
  },
  {
    name: "transition",
    meaning: "chuyển động",
    definition: "Thuộc tính định dạng cách 1 thành phần chuyển động",
    example: "div {\nwidth: 100px;\ntransition: width 2s;\n}\ndiv:hover {\nwidth: 300px;}",
  },
  {
    name: "width",
    meaning: "chiều rộng",
    definition: "Thiết lập chiều rộng của các thành phần",
    example: "div.b {\nwidth: 150px;\nborder: 1px solid black;\n}",
  },
  {
    name: "z-index",
    meaning: "trục z",
    definition: "Thiết lập thứ tự ngăn xếp của một phần tử được định vị (theo trục z)",
    example: "img {\nposition: absolute;\nleft: 0px;\ntop: 0px;\nz-index: -1;\n}",
  },
]

export {cssArr};

// mảng dữ liệu thẻ js
let jsArr = [
  {
    name: "NaN",
    meaning: "không phải số",
    definition: "Not a Number",
    example: "if (isNaN(x)) {\nreturn NaN;\n}"
  },
  {
    name: "undefined",
    meaning: "không xác định",
    definition: "Biến chưa được gán giá trị sẽ thuộc loại 'không xác định'",
    example: "let foo; /nconsole.log('is undefined?', foo === undefined);"
  },
  {
    name: "isNaN()",
    meaning: "không phải số (hàm)",
    definition: "isNaN () xác định xem một giá trị có phải là NaN hay không",
    example: "function milliseconds(x) {\nif (isNaN(x)) {\nreturn 'Not a Number!';\n}\nreturn x * 1000;\n}",
  },
  {
    name: "parseInt()",
    meaning: "phân giải ra số nguyên",
    definition:"Hàm parseInt () phân tích cú pháp một đối số chuỗi và trả về một số nguyên của cơ số được chỉ định",
    example: "function roughScale(x, base) {\nconst parsed = parseInt(x, base);\nif (isNaN(parsed)) { return 0; }\nreturn parsed * 100;\n}"
  },
  {
    name: "Function",
    meaning: "Hàm",
    definition: "Một tập hợp các câu lệnh thực hiện một tác vụ hoặc tính toán một giá trị",
    example: "function createFunction1() {}"
  },
  {
    name: "ReferenceError",
    meaning: "lỗi liên hệ một biến",
    definition: "Đại diện cho một lỗi khi một biến không tồn tại (hoặc chưa được khởi tạo) trong phạm vi hiện tại được tham chiếu",
    example: "throw new ReferenceError('Hello', 'someFile.js', 10)",
  },
  {
    name: "SyntaxError",
    meaning: "lỗi ký tự",
    definition: "Dại diện cho một lỗi khi cố gắng diễn giải mã cú pháp không hợp lệ",
    example: "throw new SyntaxError('Hello', 'someFile.js', 10);",
  },
  {
    name: "Number",
    meaning: "số",
    definition: "Số (giá trị) chuyển đổi một chuỗi hoặc giá trị khác thành kiểu Số. Nếu không thể chuyển đổi giá trị, nó sẽ trả về NaN",
    example: "Number('unicorn')  // NaN",
  },
  {
    name: "Math",
    meaning: "toán",
    definition: "Math là một đối tượng dựng sẵn có các thuộc tính và phương thức cho các hằng số và hàm toán học",
    example: "function degToRad(degrees) {\nreturn degrees * (Math.PI / 180);\n};",
  },
  {
    name: "Date",
    meaning: "ngày tháng",
    definition: "Chứa một Số đại diện cho mili giây kể từ ngày 1 tháng 1 năm 1970 theo giờ UTC.",
    example: "let birthday = new Date('December 17, 1995 03:24:00')",
  },
  {
    name: "String",
    meaning: "chuỗi",
    definition: "Đối tượng Chuỗi được sử dụng để thể hiện và thao tác với một chuỗi ký tự",
    example: "const string4 = new String('A String object')",
  },
  {
    name: "Array",
    meaning: "mảng",
    definition: "Cho phép lưu trữ một tập hợp nhiều mục dưới một tên biến duy nhất và có các thành viên để thực hiện các phép toán mảng phổ biến",
    example: "const fruits = new Array('Apple', 'Banana');",
  },
  {
    name: "JSON",
    meaning: "Ghi chú đối tượng JavaScript",
    definition: "Đối tượng JSON chứa các phương thức để phân tích cú pháp JavaScript Object Notation (JSON) và chuyển đổi các giá trị thành JSON",
    example: "",
  },
  {
    name: "break",
    meaning: "cắt, ngắt đoạn",
    definition: "Kết thúc vòng lặp, switch hoặc câu lệnh nhãn hiện tại và chuyển quyền điều khiển chương trình sang câu lệnh theo sau",
    example: "let i = 0;\nwhile (i < 6) {\nif (i === 3) {\nbreak;\n}\ni = i + 1;\n}",
  },
  {
    name: "continue",
    meaning: "tiếp tục",
    definition: "Ngắt một lần lặp (trong vòng lặp), nếu một điều kiện cụ thể xảy ra và tiếp tục với lần lặp tiếp theo trong vòng lặp.",
    example: "let text = '';\nfor (let i = 0; i < 10; i++) {\nif (i === 3) {\ncontinue;\n}\ntext = text + i;\n}",
  },
  {
    name: "if...else",
    meaning: "nếu... thì",
    definition: "Câu lệnh if thực hiện một câu lệnh nếu một điều kiện được chỉ định là đúng. Nếu điều kiện là sai, một câu lệnh khác có thể được thực hiện",
    example: "function testNum(a) {\nlet result;\nif (a > 0) {\nresult = 'positive';\n} else {\nresult = 'NOT positive';\n}\nreturn result;\n}",
  },
  {
    name: "switch",
    meaning: "chuyển đổi",
    definition: "Đánh giá một biểu thức, so khớp giá trị của biểu thức với một mệnh đề trường hợp và thực hiện các câu lệnh được liên kết với trường hợp đó",
    example: "switch (expr) {\ncase 'Oranges':\nconsole.log('Oranges are $0.59 a pound.');\nbreak;\ncase 'Apples':\nconsole.log('Apples are $0.32 a pound.');\nbreak;\ndefault:\nconsole.log('Sorry, we are out of ' + expr + '.');\n}",
  },
  {
    name: "let",
    meaning: "Khai báo biến cục bộ",
    definition: "Khai báo một biến cục bộ có phạm vi khối, tùy chọn khởi tạo nó thành một giá trị",
    example: "let text = '';\nfor (let i = 0; i < 10; i++) {\nif (i === 3) {\ncontinue;\n}\ntext = text + i;\n}",
  },
  {
    name: "const",
    meaning: "hằng số",
    definition: "Hằng số là phạm vi khối, không thể thay đổi giá trị của một hằng số thông qua phép gán lại và nó không thể được khai báo lại",
    example: "const number = 42;",
  },
  {
    name: "return",
    meaning: "trả lại",
    definition: "Dừng việc thực thi một hàm và trả về một giá trị",
    example: "function getRectArea(width, height) {\nif (width > 0 && height > 0) {\nreturn width * height;\n}\nreturn 0;\n}",
  },
  {
    name: "class",
    meaning: "lớp",
    definition: "Tạo một lớp mới với tên đã cho bằng cách sử dụng kế thừa dựa trên nguyên mẫu",
    example: "class Polygon {\nconstructor(height, width) {\nthis.area = height * width;\n}\n}",
  },
  {
    name: "do...while",
    meaning: "làm... khi",
    definition: "Tạo ra một vòng lặp thực hiện một câu lệnh được chỉ định cho đến khi điều kiện kiểm tra đánh giá là false",
    example: "do {\nlet i = i + 1;\nresult = result + i;\n} while (i < 5);",
  },
  {
    name: "for",
    meaning: "với mỗi",
    definition: "Tạo một vòng lặp bao gồm ba biểu thức tùy chọn, được đặt trong dấu ngoặc đơn và được phân tách bằng dấu chấm phẩy, theo sau là một câu lệnh sẽ được thực hiện trong vòng lặp",
    example: "let str = '';\nfor (let i = 0; i < 9; i++) {\nstr = str + i;\n}",
  },
  {
    name: "while",
    meaning: "trong khi",
    definition: "Tạo ra một vòng lặp thực hiện một câu lệnh được chỉ định miễn là điều kiện kiểm tra đánh giá là true. Điều kiện được đánh giá trước khi thực hiện câu lệnh",
    example: "let n = 0;\nwhile (n < 3) {\nn++;\n}",
  },
  {
    name: "export",
    meaning: "xuất ra",
    definition: "Câu lệnh xuất được sử dụng khi tạo mô-đun JavaScript để xuất các liên kết trực tiếp đến các hàm, đối tượng hoặc giá trị nguyên thủy từ mô-đun để chúng có thể được các chương trình khác sử dụng với câu lệnh nhập",
    example: "export { name1, name2, …, nameN };",
  },
  {
    name: "import",
    meaning: "nhập vào",
    definition: "Câu lệnh nhập tĩnh được sử dụng để nhập các liên kết trực tiếp chỉ đọc được xuất bởi một mô-đun khác",
    example: "import { export1 as alias1 } from 'acc';",
  },
]

export {jsArr};

